name: CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: pip

      - name: Install dependencies
        run: python -m pip install ruff

      - name: Run lint
        run: python -m scripts.lint
  
  typecheck:
    name: Typecheck | ${{ matrix.python-version }}
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12, 3.13] # Oldest and latest supported versions
    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies
        run: python -m pip install mypy aiohttp httpx lxml-stubs  

      - name: Run typecheck
        run: python -m scripts.typecheck
  
  test-py-version-compat:
    name: Test Python compatibility | ${{ matrix.version }}
    needs: typecheck
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [3.12, 3.13]

    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.version }}
          cache: pip

      - name: Install required dependencies
        run: python -m pip install -e .[test]

      - name: Run test
        run: python -m scripts.test

  test-os-compat:
    name: Test OS compatibility | ${{ matrix.os }}
    needs: typecheck
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: pip

      - name: Install required dependencies
        run: python -m pip install -e .[test]

      - name: Run test
        run: python -m scripts.test

  # Flag to use in status checks
  ok-flag:
    name: OK Flag
    needs: [lint, typecheck, test-cov, test-cross-compat]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Fail if any job failed
        if: |
          needs.lint.result == 'failure' ||
          needs.typecheck.result == 'failure' ||
          needs.test-py-version-compat.result == 'failure' ||
          needs.test-os-compat == 'failure'
        run: exit 1