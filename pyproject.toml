[build-system]
requires = ["hatchling >= 1.27", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "nobrakes"
dynamic = ["version"]
description = "An interface for fetching, parsing and transforming Swedish speedway data."
readme = "README.md"
requires-python = ">=3.12,<3.14"
license = "BSD-3-Clause"
authors = [{ name="Jesper Johansson", email="jesperpjohansson@gmail.com" }]
dependencies = ["lxml>=5.3.0", "lxml-stubs>=0.2.0"]

[project.optional-dependencies]
aiohttp = ["aiohttp>=3.9.0"]
httpx = ["httpx>=0.23.1"]
test = [
  "aiohttp",
  "httpx",
  "pytest",
  "pytest-asyncio",
  "pyyaml",
]
dev = [
  "aiohttp",
  "httpx",
  "lxml-stubs",
  "ruff",
  "mypy",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pyyaml",
]

# ≡≡≡ hatch ≡≡≡

[tool.hatch.version]
source = "vcs"

# ≡≡≡ ruff ≡≡≡

[tool.ruff]
target-version = "py312"
output-format = "pylint"

[tool.ruff.lint]

select = ["ALL"]

ignore = [
  "ANN003",  # missing-type-kwargs
  "COM812",  # missing-trailing-comma
  "D203",    # incorrect-blank-line-before-class
  "D212",    # multi-line-summary-first-line
  "PLR0913", # too-many-arguments
  "S311",    # suspicious-non-cryptographic-random-usage
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
  "ANN",     # flake8-annotations
  "D",       # pydocstyle
  "BLE001",  # blind-except
  "C901",    # complex-structure
  "PLR2004", # magic-value-comparison
  "S101",    # assert
  "S506",    # unsafe-yaml-load
  "SLF001",  # private-member-access
  "TRY002",  # raise-vanilla-class
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

# ≡≡≡ mypy ≡≡≡

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
extra_checks = true

# ≡≡≡ pytest ≡≡≡

[tool.pytest.ini_options]
testpaths = ["tests"]
  
[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:"]